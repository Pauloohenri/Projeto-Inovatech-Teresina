/**
 * IgnisTech - Estuda+ | Dashboard JavaScript
 * Gerencia a funcionalidade dos resumos por mat√©ria
 * Inclui navega√ß√£o entre mat√©rias, exibi√ß√£o de cards e modal
 */

// Dados dos resumos organizados por mat√©ria
const summariesData = {
  matematica: [
    {
      id: 1,
      title: "Equa√ß√µes do 1¬∫ Grau",
      icon: "üìê",
      preview: "Equa√ß√µes lineares s√£o express√µes matem√°ticas onde a inc√≥gnita tem expoente 1. Forma geral: ax + b = 0",
      difficulty: "facil",
      content: `
                <h4>Equa√ß√µes do 1¬∫ Grau</h4>
                <p><strong>Defini√ß√£o:</strong> Uma equa√ß√£o do 1¬∫ grau √© uma igualdade que cont√©m uma inc√≥gnita de expoente 1.</p>
                
                <p><strong>Forma Geral:</strong> ax + b = 0, onde a ‚â† 0</p>
                
                <h5>Passos para Resolver:</h5>
                <ol>
                    <li>Isole os termos com inc√≥gnita de um lado</li>
                    <li>Isole os n√∫meros do outro lado</li>
                    <li>Divida ambos os lados pelo coeficiente da inc√≥gnita</li>
                </ol>
                
                <h5>Exemplo:</h5>
                <p>2x + 6 = 14</p>
                <p>2x = 14 - 6</p>
                <p>2x = 8</p>
                <p>x = 4</p>
            `,
    },
    {
      id: 2,
      title: "Fra√ß√µes",
      icon: "üî¢",
      preview: "Fra√ß√µes representam partes de um todo. Compostas por numerador e denominador.",
      difficulty: "medio",
      content: `
                <h4>Fra√ß√µes</h4>
                <p><strong>Defini√ß√£o:</strong> Uma fra√ß√£o representa uma ou mais partes iguais de um todo.</p>
                
                <p><strong>Componentes:</strong></p>
                <ul>
                    <li><strong>Numerador:</strong> n√∫mero de partes consideradas</li>
                    <li><strong>Denominador:</strong> n√∫mero total de partes</li>
                </ul>
                
                <h5>Opera√ß√µes com Fra√ß√µes:</h5>
                <p><strong>Soma:</strong> Mesmo denominador: some os numeradores</p>
                <p><strong>Multiplica√ß√£o:</strong> Multiplique numerador por numerador e denominador por denominador</p>
                
                <h5>Exemplo:</h5>
                <p>1/4 + 2/4 = 3/4</p>
                <p>2/3 √ó 3/4 = 6/12 = 1/2</p>
            `,
    },
    {
      id: 3,
      title: "Geometria B√°sica",
      icon: "üìè",
      preview: "Estudo das formas, tamanhos e propriedades das figuras geom√©tricas no plano e no espa√ßo.",
      difficulty: "medio",
      content: `
                <h4>Geometria B√°sica</h4>
                <p><strong>Figuras Planas:</strong></p>
                
                <h5>Tri√¢ngulo:</h5>
                <p>√Årea = (base √ó altura) √∑ 2</p>
                <p>Per√≠metro = soma dos tr√™s lados</p>
                
                <h5>Quadrado:</h5>
                <p>√Årea = lado¬≤</p>
                <p>Per√≠metro = 4 √ó lado</p>
                
                <h5>C√≠rculo:</h5>
                <p>√Årea = œÄ √ó raio¬≤</p>
                <p>Per√≠metro = 2 √ó œÄ √ó raio</p>
            `,
    },
  ],
  historia: [
    {
      id: 4,
      title: "Brasil Colonial",
      icon: "üèõÔ∏è",
      preview: "Per√≠odo da hist√≥ria brasileira de 1500 a 1822, marcado pela coloniza√ß√£o portuguesa.",
      difficulty: "medio",
      content: `
                <h4>Brasil Colonial (1500-1822)</h4>
                
                <h5>Principais Caracter√≠sticas:</h5>
                <ul>
                    <li>Economia baseada na agricultura de exporta√ß√£o</li>
                    <li>Uso de m√£o de obra escrava</li>
                    <li>Sistema de capitanias heredit√°rias</li>
                    <li>Pacto Colonial</li>
                </ul>
                
                <h5>Ciclos Econ√¥micos:</h5>
                <p><strong>Pau-brasil (1500-1530):</strong> Primeira atividade econ√¥mica</p>
                <p><strong>A√ß√∫car (1530-1700):</strong> Principal produto de exporta√ß√£o</p>
                <p><strong>Ouro (1700-1800):</strong> Minera√ß√£o em Minas Gerais</p>
            `,
    },
    {
      id: 5,
      title: "Revolu√ß√£o Industrial",
      icon: "‚öôÔ∏è",
      preview: "Transforma√ß√£o econ√¥mica e social iniciada na Inglaterra no s√©culo XVIII.",
      difficulty: "dificil",
      content: `
                <h4>Revolu√ß√£o Industrial</h4>
                
                <h5>1¬™ Revolu√ß√£o Industrial (1760-1840):</h5>
                <ul>
                    <li>M√°quina a vapor</li>
                    <li>Ind√∫stria t√™xtil</li>
                    <li>Transporte ferrovi√°rio</li>
                </ul>
                
                <h5>Consequ√™ncias:</h5>
                <ul>
                    <li>Urbaniza√ß√£o acelerada</li>
                    <li>Surgimento da classe oper√°ria</li>
                    <li>Mudan√ßas nas rela√ß√µes de trabalho</li>
                    <li>Polui√ß√£o ambiental</li>
                </ul>
            `,
    },
  ],
  ciencias: [
    {
      id: 6,
      title: "Sistema Solar",
      icon: "üåå",
      preview: "Conjunto de corpos celestes que orbitam o Sol, incluindo planetas, luas e asteroides.",
      difficulty: "facil",
      content: `
                <h4>Sistema Solar</h4>
                
                <h5>Planetas (em ordem de dist√¢ncia do Sol):</h5>
                <ol>
                    <li><strong>Merc√∫rio:</strong> Menor planeta, mais pr√≥ximo do Sol</li>
                    <li><strong>V√™nus:</strong> Planeta mais quente</li>
                    <li><strong>Terra:</strong> √önico planeta com vida conhecida</li>
                    <li><strong>Marte:</strong> Planeta vermelho</li>
                    <li><strong>J√∫piter:</strong> Maior planeta</li>
                    <li><strong>Saturno:</strong> Planeta com an√©is</li>
                    <li><strong>Urano:</strong> Planeta inclinado</li>
                    <li><strong>Netuno:</strong> Planeta mais distante</li>
                </ol>
            `,
    },
    {
      id: 7,
      title: "Fotoss√≠ntese",
      icon: "üå±",
      preview: "Processo pelo qual as plantas produzem seu pr√≥prio alimento usando luz solar.",
      difficulty: "medio",
      content: `
                <h4>Fotoss√≠ntese</h4>
                
                <p><strong>Defini√ß√£o:</strong> Processo pelo qual plantas e alguns microrganismos convertem luz solar em energia qu√≠mica.</p>
                
                <h5>Equa√ß√£o da Fotoss√≠ntese:</h5>
                <p>6CO‚ÇÇ + 6H‚ÇÇO + luz solar ‚Üí C‚ÇÜH‚ÇÅ‚ÇÇO‚ÇÜ + 6O‚ÇÇ</p>
                
                <h5>Fases:</h5>
                <p><strong>Fase Clara:</strong> Ocorre nos tilacoides, produz ATP e NADPH</p>
                <p><strong>Fase Escura (Ciclo de Calvin):</strong> Ocorre no estroma, produz glicose</p>
                
                <h5>Import√¢ncia:</h5>
                <ul>
                    <li>Produ√ß√£o de oxig√™nio</li>
                    <li>Base da cadeia alimentar</li>
                    <li>Remo√ß√£o de CO‚ÇÇ da atmosfera</li>
                </ul>
            `,
    },
  ],
  geografia: [
    {
      id: 8,
      title: "Relevo Brasileiro",
      icon: "üèîÔ∏è",
      preview: "Caracter√≠sticas e forma√ß√µes do relevo do territ√≥rio brasileiro.",
      difficulty: "medio",
      content: `
                <h4>Relevo Brasileiro</h4>
                
                <h5>Principais Formas de Relevo:</h5>
                
                <p><strong>Planaltos (58%):</strong></p>
                <ul>
                    <li>Planalto Central</li>
                    <li>Planalto Atl√¢ntico</li>
                    <li>Planalto da Borborema</li>
                </ul>
                
                <p><strong>Plan√≠cies (41%):</strong></p>
                <ul>
                    <li>Plan√≠cie Amaz√¥nica</li>
                    <li>Plan√≠cie do Pantanal</li>
                    <li>Plan√≠cie Costeira</li>
                </ul>
                
                <p><strong>Depress√µes (1%):</strong></p>
                <ul>
                    <li>Depress√£o Sertaneja</li>
                    <li>Depress√£o da Amaz√¥nia Ocidental</li>
                </ul>
            `,
    },
  ],
  portugues: [
    {
      id: 9,
      title: "Classes Gramaticais",
      icon: "üìù",
      preview: "Classifica√ß√£o das palavras de acordo com sua fun√ß√£o na frase.",
      difficulty: "medio",
      content: `
                <h4>Classes Gramaticais</h4>
                
                <h5>Classes Vari√°veis:</h5>
                <ul>
                    <li><strong>Substantivo:</strong> nomeia seres, objetos, sentimentos</li>
                    <li><strong>Adjetivo:</strong> caracteriza o substantivo</li>
                    <li><strong>Artigo:</strong> determina o substantivo (o, a, um, uma)</li>
                    <li><strong>Pronome:</strong> substitui ou acompanha o substantivo</li>
                    <li><strong>Numeral:</strong> indica quantidade ou ordem</li>
                    <li><strong>Verbo:</strong> indica a√ß√£o, estado ou fen√¥meno</li>
                </ul>
                
                <h5>Classes Invari√°veis:</h5>
                <ul>
                    <li><strong>Adv√©rbio:</strong> modifica verbo, adjetivo ou outro adv√©rbio</li>
                    <li><strong>Preposi√ß√£o:</strong> liga palavras (de, para, com, em)</li>
                    <li><strong>Conjun√ß√£o:</strong> liga ora√ß√µes (e, mas, ou, porque)</li>
                    <li><strong>Interjei√ß√£o:</strong> expressa emo√ß√£o (ah!, oh!, uau!)</li>
                </ul>
            `,
    },
  ],
}

// Estado atual da aplica√ß√£o
let currentSubject = "matematica"

/**
 * Inicializa a p√°gina do dashboard
 */
document.addEventListener("DOMContentLoaded", () => {
  initializeDashboard()
})

/**
 * Configura todos os elementos e eventos da p√°gina
 */
function initializeDashboard() {
  setupSubjectButtons()
  setupNavigation()
  loadSummaries(currentSubject)
  setupModalEvents()

  console.log("IgnisTech Dashboard: P√°gina inicializada com sucesso")
}

/**
 * Configura os bot√µes de mat√©rias
 */
function setupSubjectButtons() {
  const subjectButtons = document.querySelectorAll(".subject-btn")

  subjectButtons.forEach((button) => {
    button.addEventListener("click", () => {
      // Remove classe active de todos os bot√µes
      subjectButtons.forEach((btn) => btn.classList.remove("active"))

      // Adiciona classe active ao bot√£o clicado
      button.classList.add("active")

      // Atualiza mat√©ria atual
      currentSubject = button.dataset.subject

      // Carrega resumos da mat√©ria selecionada
      loadSummaries(currentSubject)
    })
  })
}

/**
 * Configura a navega√ß√£o entre p√°ginas
 */
function setupNavigation() {
  const navLinks = document.querySelectorAll(".nav-link")

  navLinks.forEach((link) => {
    link.addEventListener("click", (e) => {
      // Adiciona efeito visual de clique
      link.style.transform = "scale(0.95)"
      setTimeout(() => {
        link.style.transform = ""
      }, 150)
    })
  })
}

/**
 * Carrega e exibe os resumos da mat√©ria selecionada
 * @param {string} subject - Mat√©ria selecionada
 */
function loadSummaries(subject) {
  const summariesGrid = document.getElementById("summariesGrid")
  const summaries = summariesData[subject] || []

  // Mostra estado de carregamento
  summariesGrid.innerHTML = `
        <div class="loading-state">
            <div class="loading-spinner"></div>
            <span>Carregando resumos...</span>
        </div>
    `

  // Simula carregamento
  setTimeout(() => {
    if (summaries.length === 0) {
      summariesGrid.innerHTML = `
                <div class="loading-state">
                    <span>üìö Resumos em breve para esta mat√©ria!</span>
                </div>
            `
      return
    }

    // Gera HTML dos cards
    const cardsHTML = summaries
      .map(
        (summary, index) => `
            <div class="summary-card card-animate" style="animation-delay: ${index * 0.1}s" onclick="openModal(${summary.id})">
                <div class="card-header">
                    <div class="card-icon">${summary.icon}</div>
                    <h3 class="card-title">${summary.title}</h3>
                </div>
                <div class="card-content">
                    ${summary.preview}
                </div>
                <div class="card-footer">
                    <span class="card-difficulty difficulty-${summary.difficulty}">
                        ${getDifficultyText(summary.difficulty)}
                    </span>
                    <a href="#" class="read-more" onclick="event.stopPropagation(); openModal(${summary.id})">
                        Ler mais ‚Üí
                    </a>
                </div>
            </div>
        `,
      )
      .join("")

    summariesGrid.innerHTML = cardsHTML
  }, 800)
}

/**
 * Retorna o texto da dificuldade
 * @param {string} difficulty - N√≠vel de dificuldade
 * @returns {string} Texto formatado da dificuldade
 */
function getDifficultyText(difficulty) {
  const difficulties = {
    facil: "F√°cil",
    medio: "M√©dio",
    dificil: "Dif√≠cil",
  }
  return difficulties[difficulty] || "M√©dio"
}

/**
 * Abre o modal com o conte√∫do completo do resumo
 * @param {number} summaryId - ID do resumo
 */
function openModal(summaryId) {
  // Encontra o resumo em todas as mat√©rias
  let summary = null
  for (const subject in summariesData) {
    summary = summariesData[subject].find((s) => s.id === summaryId)
    if (summary) break
  }

  if (!summary) return

  // Atualiza conte√∫do do modal
  document.getElementById("modalTitle").textContent = summary.title
  document.getElementById("modalBody").innerHTML = summary.content

  // Exibe modal
  const modalOverlay = document.getElementById("modalOverlay")
  modalOverlay.classList.add("active")

  // Adiciona listener para fechar com ESC
  document.addEventListener("keydown", handleEscapeKey)
}

/**
 * Fecha o modal
 */
function closeModal() {
  const modalOverlay = document.getElementById("modalOverlay")
  modalOverlay.classList.remove("active")

  // Remove listener do ESC
  document.removeEventListener("keydown", handleEscapeKey)
}

/**
 * Gerencia tecla ESC para fechar modal
 * @param {KeyboardEvent} event - Evento do teclado
 */
function handleEscapeKey(event) {
  if (event.key === "Escape") {
    closeModal()
  }
}

/**
 * Configura eventos do modal
 */
function setupModalEvents() {
  const modalOverlay = document.getElementById("modalOverlay")

  // Fecha modal ao clicar no overlay
  modalOverlay.addEventListener("click", (e) => {
    if (e.target === modalOverlay) {
      closeModal()
    }
  })
}

/**
 * Fun√ß√£o de logout
 */
function logout() {
  if (confirm("Tem certeza que deseja sair?")) {
    // Adiciona efeito de sa√≠da
    document.body.style.opacity = "0"
    document.body.style.transition = "opacity 0.5s ease"

    setTimeout(() => {
      window.location.href = "index.html"
    }, 500)
  }
}

/**
 * Adiciona efeitos visuais aos cards
 */
function addCardEffects() {
  const cards = document.querySelectorAll(".summary-card")

  cards.forEach((card) => {
    card.addEventListener("mouseenter", () => {
      card.style.transform = "translateY(-8px) scale(1.02)"
    })

    card.addEventListener("mouseleave", () => {
      card.style.transform = "translateY(0) scale(1)"
    })
  })
}

// Adiciona efeitos ap√≥s carregamento dos cards
setTimeout(addCardEffects, 1000)
